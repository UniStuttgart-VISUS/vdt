//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Visus.DeploymentToolkit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Visus.DeploymentToolkit.Properties.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value of a registry cannot be deleted..
        /// </summary>
        internal static string CannotDeleteDefaultValue {
            get {
                return ResourceManager.GetString("CannotDeleteDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file already exists at the desired location &quot;{0}&quot; for the deployment share..
        /// </summary>
        internal static string DeploymentShareAlreadyExists {
            get {
                return ResourceManager.GetString("DeploymentShareAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired location &quot;{0}&quot; for the deployment share is not empty..
        /// </summary>
        internal static string DeploymentShareNotEmpty {
            get {
                return ResourceManager.GetString("DeploymentShareNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DISM servicing session has already been opened..
        /// </summary>
        internal static string DuplicateDismSession {
            get {
                return ResourceManager.GetString("DuplicateDismSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configured task sequence store is empty..
        /// </summary>
        internal static string EmptySequenceStore {
            get {
                return ResourceManager.GetString("EmptySequenceStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system could not determine the type of the HAL..
        /// </summary>
        internal static string HalNotFound {
            get {
                return ResourceManager.GetString("HalNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There can only be one WIM image mounted at a time. Unmount &quot;{0}&quot; to mount a new one..
        /// </summary>
        internal static string ImageAlreadyMounted {
            get {
                return ResourceManager.GetString("ImageAlreadyMounted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path &quot;{0}&quot; did not specify a valid unattend file or an architecture-independent template for such..
        /// </summary>
        internal static string InexistentUnattend {
            get {
                return ResourceManager.GetString("InexistentUnattend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element selected by the XPath expression &quot;{0}&quot; does not exist..
        /// </summary>
        internal static string InexistentXPath {
            get {
                return ResourceManager.GetString("InexistentXPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid location for the deployment share is required..
        /// </summary>
        internal static string InvalidDeploymentShare {
            get {
                return ResourceManager.GetString("InvalidDeploymentShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &quot;{0}&quot; does not designate a valid mount point for a registry hive..
        /// </summary>
        internal static string InvalidHiveMountPoint {
            get {
                return ResourceManager.GetString("InvalidHiveMountPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid image..
        /// </summary>
        internal static string InvalidImage {
            get {
                return ResourceManager.GetString("InvalidImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output location for the ISO to create is invalid..
        /// </summary>
        internal static string InvalidIsoOutput {
            get {
                return ResourceManager.GetString("InvalidIsoOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid mount point..
        /// </summary>
        internal static string InvalidMountPoint {
            get {
                return ResourceManager.GetString("InvalidMountPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory holding Windows PE is invalid..
        /// </summary>
        internal static string InvalidWindowsPeDirectory {
            get {
                return ResourceManager.GetString("InvalidWindowsPeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The registry key &quot;{0}&quot; does not exist..
        /// </summary>
        internal static string MissingRegistryKey {
            get {
                return ResourceManager.GetString("MissingRegistryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value registry value must be provided unless the value is to be deleted..
        /// </summary>
        internal static string MissingRegistryValue {
            get {
                return ResourceManager.GetString("MissingRegistryValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A mounted WIM image was expected to be stored in &quot;{0}&quot;, but was not found..
        /// </summary>
        internal static string MissingWimMount {
            get {
                return ResourceManager.GetString("MissingWimMount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DISM image needs to be opened before this operation can be performed..
        /// </summary>
        internal static string NoDismSession {
            get {
                return ResourceManager.GetString("NoDismSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XPath expression &quot;{0}&quot; did match more than element..
        /// </summary>
        internal static string NonUniqueXPath {
            get {
                return ResourceManager.GetString("NonUniqueXPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; does not designate or does not begin with a valid registry hive..
        /// </summary>
        internal static string NoRegistryHive {
            get {
                return ResourceManager.GetString("NoRegistryHive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task sequence requires elevation, but the process is not running as administrator..
        /// </summary>
        internal static string NotAdministrator {
            get {
                return ResourceManager.GetString("NotAdministrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service loader for the Virtual Disk Services does not implement the expected interface..
        /// </summary>
        internal static string NoVdsServiceLoader {
            get {
                return ResourceManager.GetString("NoVdsServiceLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open the registry path &quot;{0}&quot;..
        /// </summary>
        internal static string OpenRegistryFailed {
            get {
                return ResourceManager.GetString("OpenRegistryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The phase has already been set to {0}..
        /// </summary>
        internal static string PhaseAlreadySet {
            get {
                return ResourceManager.GetString("PhaseAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified task sequence &quot;{0}&quot; has not been found in the task sequence store..
        /// </summary>
        internal static string SequenceNotInStore {
            get {
                return ResourceManager.GetString("SequenceNotInStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task type &quot;{0}&quot; does not exist..
        /// </summary>
        internal static string TaskNotFound {
            get {
                return ResourceManager.GetString("TaskNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task sequence store at &quot;{0}&quot; could not be found..
        /// </summary>
        internal static string TsStoreNotFound {
            get {
                return ResourceManager.GetString("TsStoreNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &quot;{0}&quot; exists, but it is not a task..
        /// </summary>
        internal static string TypeNotTask {
            get {
                return ResourceManager.GetString("TypeNotTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified task sequence is for phase {0}, but a task sequence for phase {1} was expected..
        /// </summary>
        internal static string UnexpectedPhase {
            get {
                return ResourceManager.GetString("UnexpectedPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed waiting for Virtual Disk Service to become ready..
        /// </summary>
        internal static string WaitVdsFailed {
            get {
                return ResourceManager.GetString("WaitVdsFailed", resourceCulture);
            }
        }
    }
}
