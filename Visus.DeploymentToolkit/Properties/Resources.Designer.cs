//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Visus.DeploymentToolkit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Visus.DeploymentToolkit.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &quot;{0}&quot; failed with exit code {1}..
        /// </summary>
        internal static string CommandFailed {
            get {
                return ResourceManager.GetString("CommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &quot;{0}&quot; did not run..
        /// </summary>
        internal static string CommandNotRun {
            get {
                return ResourceManager.GetString("CommandNotRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying the condition &quot;{Condition}&quot; to {Action} disks..
        /// </summary>
        internal static string DiskSelectionCondition {
            get {
                return ResourceManager.GetString("DiskSelectionCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting disks with an EFI boot partition on it..
        /// </summary>
        internal static string DiskSelectionEfiBootDisk {
            get {
                return ResourceManager.GetString("DiskSelectionEfiBootDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring disk selection step as the result would be empty..
        /// </summary>
        internal static string DiskSelectionEmpty {
            get {
                return ResourceManager.GetString("DiskSelectionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excluding {Disks] disks that matched the specified condition..
        /// </summary>
        internal static string DiskSelectionExclude {
            get {
                return ResourceManager.GetString("DiskSelectionExclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Including {Disks} disks that matched the specified condition..
        /// </summary>
        internal static string DiskSelectionInclude {
            get {
                return ResourceManager.GetString("DiskSelectionInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting the largest disk..
        /// </summary>
        internal static string DiskSelectionLargest {
            get {
                return ResourceManager.GetString("DiskSelectionLargest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting MBR disks having the boot flag set..
        /// </summary>
        internal static string DiskSelectionMbrBootDisk {
            get {
                return ResourceManager.GetString("DiskSelectionMbrBootDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No action has been specified. Therefore all input disks are eligible..
        /// </summary>
        internal static string DiskSelectionNone {
            get {
                return ResourceManager.GetString("DiskSelectionNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting the smallest disk..
        /// </summary>
        internal static string DiskSelectionSmallest {
            get {
                return ResourceManager.GetString("DiskSelectionSmallest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying unattend file &quot;{0}&quot; to &quot;{1}&quot;..
        /// </summary>
        internal static string DismApplyUnattend {
            get {
                return ResourceManager.GetString("DismApplyUnattend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Committing changes..
        /// </summary>
        internal static string DismCommit {
            get {
                return ResourceManager.GetString("DismCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialising DISM with &quot;{0}&quot; as log file and &quot;{1}&quot; as scratch directory..
        /// </summary>
        internal static string DismInitialise {
            get {
                return ResourceManager.GetString("DismInitialise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening offline servicing session for &quot;{path}&quot;..
        /// </summary>
        internal static string DismOpenOffline {
            get {
                return ResourceManager.GetString("DismOpenOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down DISM..
        /// </summary>
        internal static string DismShutdown {
            get {
                return ResourceManager.GetString("DismShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuing WMI query &quot;{query}&quot;..
        /// </summary>
        internal static string IssuingWmiQuery {
            get {
                return ResourceManager.GetString("IssuingWmiQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry hive is &quot;{0}&quot;..
        /// </summary>
        internal static string ParsingAsRegistryHive {
            get {
                return ResourceManager.GetString("ParsingAsRegistryHive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing the registry hive from &quot;{0}&quot;..
        /// </summary>
        internal static string ParsingRegistryHive {
            get {
                return ResourceManager.GetString("ParsingRegistryHive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partition and format disk.
        /// </summary>
        internal static string PartitionFormatDisk {
            get {
                return ResourceManager.GetString("PartitionFormatDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remaining registry path is &quot;{0}&quot;..
        /// </summary>
        internal static string RegistryPathRemaining {
            get {
                return ResourceManager.GetString("RegistryPathRemaining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select installation disk.
        /// </summary>
        internal static string SelectInstallDisk {
            get {
                return ResourceManager.GetString("SelectInstallDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task sequence {SequencName}.
        /// </summary>
        internal static string TaskSequenceName {
            get {
                return ResourceManager.GetString("TaskSequenceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for the Virtual Disk Service to become ready..
        /// </summary>
        internal static string WaitingVds {
            get {
                return ResourceManager.GetString("WaitingVds", resourceCulture);
            }
        }
    }
}
