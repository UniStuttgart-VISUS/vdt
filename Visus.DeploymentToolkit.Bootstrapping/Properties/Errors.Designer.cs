//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Visus.DeploymentToolkit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Visus.DeploymentToolkit.Properties.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &quot;{0}&quot; failed with exit code {1}..
        /// </summary>
        internal static string CommandFailed {
            get {
                return ResourceManager.GetString("CommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &quot;{0}&quot; did not run..
        /// </summary>
        internal static string CommandNotRun {
            get {
                return ResourceManager.GetString("CommandNotRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source &quot;{0}&quot; is a directory, but the specified destination &quot;{1}&quot; is a file..
        /// </summary>
        internal static string CopyDirectoryToFile {
            get {
                return ResourceManager.GetString("CopyDirectoryToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source &quot;{0}&quot; does not exist and the copy task was configured to be mandatory..
        /// </summary>
        internal static string CopySourceMissing {
            get {
                return ResourceManager.GetString("CopySourceMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the deployment share is required, but was not set..
        /// </summary>
        internal static string DeploymentSharePathNotSet {
            get {
                return ResourceManager.GetString("DeploymentSharePathNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory &quot;{0}&quot; already exists..
        /// </summary>
        internal static string DirectoryExists {
            get {
                return ResourceManager.GetString("DirectoryExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another DISM session is already open. Only one image or installation can be processed at a time..
        /// </summary>
        internal static string DuplicateDismScope {
            get {
                return ResourceManager.GetString("DuplicateDismScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the working directory must be set. Make sure that the task is configured accordinly or that the working directory has been configured in the state passed to the task..
        /// </summary>
        internal static string InvalidWorkingDirectory {
            get {
                return ResourceManager.GetString("InvalidWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid path to the deployment agent was provided in the task sequence state..
        /// </summary>
        internal static string NoAgent {
            get {
                return ResourceManager.GetString("NoAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid file for persisting the state must have been set in the state before running this task..
        /// </summary>
        internal static string NoStateFile {
            get {
                return ResourceManager.GetString("NoStateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the task sequence must either be a string identifiying the sequence or a task sequence object itself..
        /// </summary>
        internal static string NoTaskSequence {
            get {
                return ResourceManager.GetString("NoTaskSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The phase has already been set to {0}..
        /// </summary>
        internal static string PhaseAlreadySet {
            get {
                return ResourceManager.GetString("PhaseAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No phase has been assigned yet..
        /// </summary>
        internal static string PhaseNotSet {
            get {
                return ResourceManager.GetString("PhaseNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} of {1} is required, was not set and can also not be set from a configuration property &quot;{2}&quot;..
        /// </summary>
        internal static string RequiredPropertyNotSet {
            get {
                return ResourceManager.GetString("RequiredPropertyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} of {1} is required, was not set and can also not be set from the task sequence state &quot;{2}&quot;..
        /// </summary>
        internal static string RequiredStateNotSet {
            get {
                return ResourceManager.GetString("RequiredStateNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state could not be restored from &quot;{0}&quot;..
        /// </summary>
        internal static string RestoringStateFailed {
            get {
                return ResourceManager.GetString("RestoringStateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given task cannot execute in phase {0}..
        /// </summary>
        internal static string TaskCannotExecute {
            get {
                return ResourceManager.GetString("TaskCannotExecute", resourceCulture);
            }
        }
    }
}
